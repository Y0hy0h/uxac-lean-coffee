name: Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build üõ†Ô∏è
        env:
          ELM_APP_API_KEY: "${{ secrets.ELM_APP_API_KEY }}"
          ELM_APP_AUTH_DOMAIN: "${{ secrets.ELM_APP_AUTH_DOMAIN }}"
          ELM_APP_PROJECT_ID: "${{ secrets.ELM_APP_PROJECT_ID }}"
          ELM_APP_STORAGE_BUCKET: "${{ secrets.ELM_APP_STORAGE_BUCKET }}"
          ELM_APP_MESSAGING_SENDER_ID: "${{ secrets.ELM_APP_MESSAGING_SENDER_ID }}"
          ELM_APP_APP_ID: "${{ secrets.ELM_APP_APP_ID }}"
        run: |
          npm install
          npm run build

      - name: Deploy üöÄ
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          expires: 30d
          projectId: "${{ secrets.ELM_APP_PROJECT_ID }}"
          channelId: live

      - name: Deploy PR üöÄ
        if: ${{ github.event_name == 'pull_request' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          expires: 30d
          projectId: "${{ secrets.ELM_APP_PROJECT_ID }}"
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels